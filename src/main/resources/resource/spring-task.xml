<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
   					   http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
   					   http://www.springframework.org/schema/context 
   					   http://www.springframework.org/schema/context/spring-context-3.1.xsd
    				   http://www.springframework.org/schema/task   
   					   http://www.springframework.org/schema/task/spring-task-3.0.xsd">


	<!-- 异步生产线程 -->
	<bean id="simpleAsyncTaskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor">
		<property name="daemon" value="true" />
		<property name="concurrencyLimit" value="2" />
		<property name="threadNamePrefix" value="simpleAsyncTaskExecutor" />
	</bean>


	<!-- 任务处理类 -->
	<bean id="fileConvertService" class="com.sw.util.thread.FileConvertService">
		<property name="asyncTaskExecutor" ref="simpleAsyncTaskExecutor" />
		<property name="poolTaskExecutor" ref="threadPoolTaskExecutor" />
	</bean>

	<!-- 异步处理线程池 -->
	<bean id="threadPoolTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数 -->
		<property name="corePoolSize" value="2" />
		<!-- 最大线程数 -->
		<property name="maxPoolSize" value="10" />
		<!-- 队列最大长度 >=mainExecutor.maxSize -->
		<property name="queueCapacity" value="1000" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="300" />
		<!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>
	
	<!-- 定时任务处理类 -->
	<bean id="orderTimeOutTask" class="com.sw.util.thread.OrderTimeOutTask">
		<property name="relationDao" ref="relationDao" />
	</bean>
	
	<task:scheduled-tasks scheduler="cornScheduler">
		<task:scheduled ref="orderTimeOutTask" method="hangUpOrder" cron="0 30 0 * * ?" />
	</task:scheduled-tasks>
	<task:scheduler id="cornScheduler" pool-size="1"/>
	<!-- 定时任务结束 -->

</beans>
