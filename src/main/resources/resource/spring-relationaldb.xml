<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   					   http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	   					   http://www.springframework.org/schema/context 
	   					   http://www.springframework.org/schema/context/spring-context-3.1.xsd 
	   					   http://www.springframework.org/schema/data/mongo
          				   http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
	   					   http://www.springframework.org/schema/aop 
	   					   http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
	   					   http://www.springframework.org/schema/tx 
	   					   http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- 多数据源配置，第一个数据源对象,名称中必须指定数据库类型名称为前缀 名称前缀如下：mysql，oracle，sqlserver，db2，sybase，informix，postgres -->
	<bean id="mysql_dataSource1" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${datasource.mysql1.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${datasource.mysql1.url}</value>
		</property>
		<property name="user">
			<value>${datasource.mysql1.username}</value>
		</property>
		<property name="password">
			<value>${datasource.mysql1.password}</value>
		</property>
		<property name="acquireIncrement">
			<value>${c3p0.acquireIncrement}</value>
		</property>
		<property name="initialPoolSize">
			<value>${c3p0.initialPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${c3p0.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${c3p0.maxPoolSize}</value>
		</property>
		<property name="maxIdleTime">
			<value>${c3p0.maxIdleTime}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${c3p0.idleConnectionTestPeriod}</value>
		</property>
		<property name="maxStatements">
			<value>${c3p0.maxStatements}</value>
		</property>
		<property name="numHelperThreads">
			<value>${c3p0.numHelperThreads}</value>
		</property>
	</bean>

	<!-- 多数据源配置，第二个数据源对象,名称中必须指定数据库类型名称为前缀 名称前缀如下：mysql，oracle，sqlserver，db2，sybase，informix，postgres -->
	<bean id="oracle_dataSource2" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${datasource.oracle1.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${datasource.oracle1.url}</value>
		</property>
		<property name="user">
			<value>${datasource.oracle1.username}</value>
		</property>
		<property name="password">
			<value>${datasource.oracle1.password}</value>
		</property>
		<property name="acquireIncrement">
			<value>${c3p0.acquireIncrement}</value>
		</property>
		<property name="initialPoolSize">
			<value>${c3p0.initialPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${c3p0.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${c3p0.maxPoolSize}</value>
		</property>
		<property name="maxIdleTime">
			<value>${c3p0.maxIdleTime}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${c3p0.idleConnectionTestPeriod}</value>
		</property>
		<property name="maxStatements">
			<value>${c3p0.maxStatements}</value>
		</property>
		<property name="numHelperThreads">
			<value>${c3p0.numHelperThreads}</value>
		</property>
	</bean>

	<!-- 多数据源配置，第三个数据源对象,名称中必须指定数据库类型名称为前缀 名称前缀如下：mysql，oracle，sqlserver，db2，sybase，informix，postgres -->
	<bean id="sqlserver_dataSource3" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${datasource.sqlserver1.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${datasource.sqlserver1.url}</value>
		</property>
		<property name="user">
			<value>${datasource.sqlserver1.username}</value>
		</property>
		<property name="password">
			<value>${datasource.sqlserver1.password}</value>
		</property>
		<property name="acquireIncrement">
			<value>${c3p0.acquireIncrement}</value>
		</property>
		<property name="initialPoolSize">
			<value>${c3p0.initialPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${c3p0.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${c3p0.maxPoolSize}</value>
		</property>
		<property name="maxIdleTime">
			<value>${c3p0.maxIdleTime}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${c3p0.idleConnectionTestPeriod}</value>
		</property>
		<property name="maxStatements">
			<value>${c3p0.maxStatements}</value>
		</property>
		<property name="numHelperThreads">
			<value>${c3p0.numHelperThreads}</value>
		</property>
	</bean>

	<!--自定义动态数据源注入，实现了spring动态数据源接口 -->
	<bean id="dataSource" class="com.sw.core.data.dbholder.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="mysql_dataSource1" value-ref="mysql_dataSource1" />
				<entry key="oracle_dataSource2" value-ref="oracle_dataSource2" />
				<entry key="sqlserver_dataSource3" value-ref="sqlserver_dataSource3" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="mysql_dataSource1" />
	</bean>

	<!-- 系统参数初始化 -->
	<bean id="systemConfigInit" class="com.sw.core.initialize.SystemConfigInit"
		init-method="init">
		<property name="configLocation" value="classpath:config.properties" />
	</bean>

	<!-- ibatis3 SqlSessionFactory注入 -->
	<bean id="sqlSessionFactory" class="org.springframework.orm.ibatis3.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:sqlMapConfig.xml" />
		<property name="mapperLocations"
			value="classpath:com/sw/plugins/**/ibatis/mysql_*.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--ibatis3 SqlSessionTemplate注入 -->
	<bean id="sqlSessionTemplate" class="org.springframework.orm.ibatis3.SqlSessionTemplate">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!--自定义relationDao注入 -->
	<bean id="relationDao" class="com.sw.core.data.dao.RelationaldbCommonDao">
		<constructor-arg name="sqlSessionTemplate" ref="sqlSessionTemplate"></constructor-arg>
		<property name="initPageConfig" ref="initPageConfig" />
	</bean>
	
	<!-- 配置自定义数据源模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
		<property name="dataSource" ref="sqlserver_dataSource3"></property>
	</bean>

	<bean id="customDao" class="com.sw.core.data.dao.CustomCommonDao">
		<property name="jt" ref="jdbcTemplate"></property>
	</bean>

	<!-- 系统插件初始化到数据库 <bean id="pluginsConfigInit" class="com.sw.plugins.usercenter.system.authorization.service.RelationAuthorizationService" 
		init-method="init"> <property name="commonDao" ref="commonDao" /> </bean> -->

	<!-- 数据连接事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--配置哪些方法,什么情况下需要回滚 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="check*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="delete*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="send" propagation="REQUIRES_NEW"
				rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>

</beans>